generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Player {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  goals       Int           @default(0)
  assists     Int           @default(0)
  season      String        @default("24/25")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String?       @unique
  user        User?         @relation(fields: [userId], references: [id])
  seasonStats SeasonStats[]
}

model SeasonStats {
  id        Int      @id @default(autoincrement())
  playerId  Int
  season    String
  goals     Int      @default(0)
  assists   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@unique([playerId, season])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  player        Player?
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
